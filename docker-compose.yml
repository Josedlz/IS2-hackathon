version: '3.7'
volumes:
  docker:

services:
  database:
    image: postgres
    environment:
      POSTGRES_NAME: postgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_HOST: database_postgres_image
    ports:
      - '5431:5432'
    volumes:
      - docker:/data/db
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  nextapp:
    build:
      context: ./hackathon-1
      dockerfile: Dockerfile
    environment:
      POSTGRES_NAME: postgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_HOST: database_postgres_image
      DB_LOCAL_URL: postgres://database:5432/next-docker
    restart: always
    volumes:
      - ./hackathon-1:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - ./.env
    ports:
      - "3001:3000"

  nextapp-2:
    build:
      context: ./hackathon-1
      dockerfile: Dockerfile
    environment:
      POSTGRES_NAME: postgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_HOST: database_postgres_image
      DB_LOCAL_URL: postgres://database:5432/next-docker
    restart: always
    volumes:
      - ./hackathon-1:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - ./.env
    ports:
      - "3002:3000"
  nextapp-3:
    build:
      context: ./hackathon-1
      dockerfile: Dockerfile
    environment:
      POSTGRES_NAME: postgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_HOST: database_postgres_image
      DB_LOCAL_URL: postgres://database:5432/next-docker
    restart: always
    volumes:
      - ./hackathon-1:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - ./.env
    ports:
      - "3003:3000"
  #   depends_on:
  #     - database

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx_server.conf:/etc/nginx/sites-enabled:ro
    depends_on:
      - nextapp
    ports:
      - "4000:4000"

  telegraf:
    image: telegraf
    container_name: telegraf
    hostname: telegraf
    restart: always
    ports:
        - '8125:8125/udp'
        - '8092:8092/udp'
        - '8094:8094'
    volumes:
        - './config/telegraf.conf:/etc/telegraf/telegraf.conf:ro'
        - '//var/run/docker.sock:/var/run/docker.sock'
    env_file:
      - ./.env
    depends_on:
      - influxdb
    links:
      - influxdb
    environment:
        - TZ=America/Lima

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: always
    environment:
      - INFLUXDB_DB=influx
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    ports:
      - '8086:8086'
    volumes:
      - ./influxdb_data:/var/lib/influxdb2
    env_file:
      - ./.env

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana-server
    restart: always
    depends_on:
      - influxdb
    environment:
      - GF_SERVER_HTTP_PORT=3100
      - GF_SECURITY_ADMIN_USER=fiscalizador
      - GF_SECURITY_ADMIN_PASSWORD=fiscalizador
    links:
      - influxdb
    ports:
      - '3100:3100'
    volumes:
      - ./grafana_data:/var/lib/grafana

  tunnel:
    container_name: cloudflared-tunnel
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run 
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARED_TOKEN}
    #   - url= http://nginx:4000
# docker run cloudflare/cloudflared:latest tunnel --no-autoupdate run --token eyJhIjoiYzk3ZThjZjUxZTA2YjhjZTIwNjFlMmQ4MzliODE0ZjQiLCJ0IjoiYmJkZmQyOGItNWUzYy00OWE4LTkyYWUtOWJiZTRiM2MyM2NjIiwicyI6IllUVm1ZVEkzWldZdE1ESmtaUzAwTW1aaExUaGxaV1F0TWpZMU5EWTFaRFkwTXpreCJ9


# influxdb-net