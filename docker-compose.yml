version: '3.7'
volumes:
  docker:

services:
  database:
    image: postgres
    # command: sh -c " cd data/db && ls"  
    environment:
      POSTGRES_NAME: postgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_HOST: database_postgres_image
    ports:
      - '5431:5432'
    volumes:
      - docker:/data/db
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  nextapp:
    build:
      context: ./hackathon-1
      dockerfile: Dockerfile
    environment:
      POSTGRES_NAME: postgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_HOST: database_postgres_image
      DB_LOCAL_URL: postgres://database:5432/next-docker
    # container_name: nextapp
    restart: always
    volumes:
      - ./hackathon-1:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000"
    depends_on:
      - database
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - nextapp
    ports:
      - "4000:4000"
  # telegraf:
  #   image: telegraf
  #   container_name: telegraf
  #   restart: always
  #   volumes:
  #   - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
  #   depends_on:
  #     - influxdb
  #   links:
  #     - influxdb
  #   ports:
  #   - '8125:8125'

  # influxdb:
  #   image: influxdb:1.8-alpine
  #   container_name: influxdb
  #   restart: always
  #   environment:
  #     - INFLUXDB_DB=influx
  #     - INFLUXDB_ADMIN_USER=admin
  #     - INFLUXDB_ADMIN_PASSWORD=admin
  #   ports:
  #     - '8086:8086'
  #   volumes:
  #     - influxdb_data:/var/lib/influxdb

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana-server
  #   restart: always
  #   depends_on:
  #     - influxdb
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_INSTALL_PLUGINS=
  #   links:
  #     - influxdb
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - grafana_data:/var/lib/grafana
      
# volumes:
#   # grafana_data: {}
#   influxdb_data: {}


